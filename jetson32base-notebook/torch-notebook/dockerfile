ARG JETPACKR_VERSION
ARG PTH_VERSION
FROM --platform=$TARGETPLATFORM nvcr.io/nvidia/l4t-pytorch:r${JETPACKR_VERSION}-pth${PTH_VERSION}-py3 as base

ARG NB_USER="jovyan"
ARG NB_UID="1000"
ARG NB_GID="100"
ARG NOTEBOOK_VERSION
ARG JUPYTERHUB_VERSION
ARG JUPYTERLAB_VERSION

ENV NOTEBOOK_VERSION=${NOTEBOOK_VERSION}
ENV JUPYTERHUB_VERSION=${JUPYTERHUB_VERSION}
ENV JUPYTERLAB_VERSION=${JUPYTERLAB_VERSION}

RUN apt install --yes gnupg
RUN mkdir ~/.gnupg
RUN echo "disable-ipv6" >> ~/.gnupg/dirmngr.conf
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 42D5A192B819C5DA
RUN apt-get update --yes 
RUN apt-get install --yes \
    fonts-liberation \
    ffmpeg \
    git \
    pandoc \
    libssl-dev \
    sudo \
    cmake \
    rustc \
    cargo \
    run-one

RUN apt-get clean
RUN rm -rf /var/lib/apt/lists/* 
RUN echo "en_US.UTF-8 UTF-8" > /etc/locale.gen
RUN locale-gen

# Configure environment
ENV SHELL=/bin/bash \
    NB_USER="${NB_USER}" \
    NB_UID=${NB_UID} \
    NB_GID=${NB_GID} \
    LC_ALL=en_US.UTF-8 \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8



USER root

ENV HOME="/home/${NB_USER}"

# Fix: https://github.com/hadolint/hadolint/wiki/DL4006
# Fix: https://github.com/koalaman/shellcheck/wiki/SC3014
SHELL ["/bin/bash", "-o", "pipefail", "-c"]

ENV TINI_VERSION=v0.19.0
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-arm64 /usr/local/bin/tini
RUN chmod +x /usr/local/bin/tini

# Copy a script that we will use to correct permissions after running certain commands
COPY fix-permissions /usr/local/bin/fix-permissions
RUN chmod a+rx /usr/local/bin/fix-permissions

COPY start.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/start.sh

# Copy local files as late as possible to avoid cache busting
COPY start-notebook.sh /usr/local/bin/start-notebook.sh
COPY start-singleuser.sh /usr/local/bin/start-singleuser.sh
RUN chmod +x /usr/local/bin/start-notebook.sh
RUN chmod +x /usr/local/bin/start-singleuser.sh
# Currently need to have both jupyter_notebook_config and jupyter_server_config to support classic and lab

# Enable prompt color in the skeleton .bashrc before creating the default NB_USER
# hadolint ignore=SC2016
RUN sed -i 's/^#force_color_prompt=yes/force_color_prompt=yes/' /etc/skel/.bashrc && \
    # Add call to conda init script see https://stackoverflow.com/a/58081608/4413446
    echo 'eval "$(command conda shell.bash hook 2> /dev/null)"' >> /etc/skel/.bashrc

# Create NB_USER with name jovyan user with UID=1000 and in the 'users' group
# and make sure these dirs are writable by the `users` group.
RUN echo "auth requisite pam_deny.so" >> /etc/pam.d/su && \
    sed -i.bak -e 's/^%admin/#%admin/' /etc/sudoers && \
    sed -i.bak -e 's/^%sudo/#%sudo/' /etc/sudoers && \
    useradd -l -m -s /bin/bash -N -u "${NB_UID}" "${NB_USER}" && \
    chmod g+w /etc/passwd && \
    fix-permissions "${HOME}"

RUN rm -rf ~/.cargo/registry/cache

USER ${NB_UID}

RUN pip3 install -U pip
RUN pip3 install --no-cache-dir setuptools_rust
RUN pip3 install --no-cache-dir jupyterlab==$JUPYTERLAB_VERSION
RUN pip3 install --no-cache-dir jupyterhub==$JUPYTERHUB_VERSION

RUN pip3 --no-cache-dir install ipywidgets
RUN pip3 --no-cache-dir install widgetsnbextension


RUN pip3 --no-cache-dir install pyarrow 
RUN pip3 --no-cache-dir install fastavro
RUN pip3 --no-cache-dir install pydot 
RUN pip3 --no-cache-dir install lxml 
RUN pip3 --no-cache-dir install Pillow 
RUN pip3 --no-cache-dir install python-snappy
RUN pip3 --no-cache-dir install lz4
RUN pip3 --no-cache-dir install boto3
RUN pip3 --no-cache-dir install s3fs
RUN pip3 --no-cache-dir install psycopg2-binary
RUN pip3 --no-cache-dir install pymysql
RUN pip3 --no-cache-dir install peewee
RUN pip3 --no-cache-dir install SQLAlchemy
RUN pip3 --no-cache-dir install matplotlib
RUN pip3 --no-cache-dir install seaborn
RUN pip3 --no-cache-dir install pandas
RUN pip3 --no-cache-dir install thefuzz
RUN pip3 --no-cache-dir install scipy
RUN pip3 --no-cache-dir install scikit-learn
RUN pip3 --no-cache-dir install scikit-image
RUN pip3 --no-cache-dir install jieba

RUN pip3 install --no-cache-dir transformers
RUN pip3 --no-cache-dir install datasets

ENV PATH="${HOME}/.local/bin:${PATH}"

RUN jupyter notebook --generate-config 
RUN fix-permissions "/home/${NB_USER}"
ENV JUPYTER_PORT=8888
EXPOSE $JUPYTER_PORT
COPY jupyter_server_config.py docker_healthcheck.py /etc/jupyter/

# Configure container startup

USER root

RUN chmod +x /etc/jupyter/docker_healthcheck.py

RUN sed -re "s/c.ServerApp/c.NotebookApp/g" \
    /etc/jupyter/jupyter_server_config.py > /etc/jupyter/jupyter_notebook_config.py && \
    fix-permissions /etc/jupyter/

USER ${NB_UID}

RUN mkdir "/home/${NB_USER}/work" && \
    fix-permissions "/home/${NB_USER}"

# Configure container startup
ENTRYPOINT ["tini", "-g", "--"]
WORKDIR "${HOME}"

HEALTHCHECK --interval=5s --timeout=3s --start-period=5s --retries=3 \
    CMD /etc/jupyter/docker_healthcheck.py || exit 1

CMD ["start-notebook.sh"]